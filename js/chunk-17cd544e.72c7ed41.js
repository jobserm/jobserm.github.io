(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-17cd544e"],{"0c1e":function(e,t,o){"use strict";o.r(t);var a=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[o("Job")],1)},s=[],c=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[e.isLoading?o("loading"):e._e(),e.isLoading?e._e():o("div",[o("body",[o("c-flex",[o("c-flex",{attrs:{mt:"1.5rem",ml:"1rem"}},[o("c-select",{attrs:{mt:"2rem",ml:"98rem",id:"type"},model:{value:e.form.working_status,callback:function(t){e.$set(e.form,"working_status",t)},expression:"form.working_status"}},[o("option",{staticStyle:{display:"none"},attrs:{value:""}},[e._v("สถานะการทำงาน")]),o("option",[e._v("AVAILABLE")]),o("option",[e._v("IN PROGRESS")]),o("option",[e._v("FINISH")])]),o("c-button",{attrs:{ml:"10",mt:"2rem",w:"20rem","variant-color":"indigo",variant:"outline"},on:{click:function(t){return e.search(e.form.working_status)}}},[e._v(" ค้นหา ")]),o("c-button",{attrs:{mt:"2rem",ml:"1rem",w:"20rem",bg:"#F22BB2"},on:{click:function(t){return e.fetchJobs()}}},[e._v(" clear ")])],1)],1),0===this.jobs.length?o("c-text",{attrs:{fontSize:"5xl",align:"center",color:"red",mt:"4rem"}},[e._v("ยังไม่มีงานที่คุณสมัคร")]):e._e(),o("c-text",{attrs:{fontSize:"5xl",ml:"4rem",color:"indigo.400",mt:"4rem"}},[e._v("งานที่คุณสมัครไป")]),o("c-simple-grid",{attrs:{columns:[1,1,1,6],spacing:"8",m:"10"}},e._l(e.jobs,(function(t){return o("div",{key:t.id},[o("c-box",{attrs:{mt:"4rem",maxW:"sm","border-width":"4px",rounded:"lg",overflow:"hidden","border-color":"black",_hover:{bg:"indigo.100",borderColor:"indigo"},fontSize:"xl"}},[o("c-image",{attrs:{src:t.image[0].path,alt:"cat"}}),o("c-box",{attrs:{p:"6"}},[o("c-box",{attrs:{d:"flex","align-items":"baseline"}},["AVAILABLE"===t.working_status?o("c-badge",{attrs:{rounded:"full",px:"5","variant-color":"green","font-size":"0.75em"}},[e._v(" AVALIABLE ")]):e._e(),"IN PROGRESS"===t.working_status?o("c-badge",{attrs:{rounded:"full",px:"5","variant-color":"yellow","font-size":"0.75em"}},[e._v(" IN PROGRESS ")]):e._e(),"FINISH"===t.working_status?o("c-badge",{attrs:{rounded:"full",px:"5","variant-color":"red","font-size":"0.75em"}},[e._v(" FINISH ")]):e._e(),o("c-box",{attrs:{color:"gray.500","font-weight":"semibold","letter-spacing":"wide","font-size":"0.75em","text-transform":"uppercase",ml:"2"}},[e._v(" "+e._s(t.province)+" • "+e._s(t.category_name[0].category_name)+" ")])],1),o("c-box",{attrs:{mt:"1","font-weight":"semibold",as:"h4","line-height":"tight","is-truncated":""}},[e._v(" "+e._s(t.title)+" ")]),o("c-box",[e._v(" "+e._s(t.description)+" ")]),o("c-box",{attrs:{mt:"1.5rem","font-weight":"semibold",as:"h4","line-height":"tight","is-truncated":""}},[e._v(" "+e._s("คุณสมบัติที่ต้องการ")+" ")]),o("c-box",[e._v(" "+e._s(t.requirement)+" ")]),o("c-box",{attrs:{mt:"1.5rem","font-weight":"semibold",as:"h4","line-height":"tight","is-truncated":""}},[e._v(" "+e._s("ค่าจ้าง")+" ")]),o("c-box",[e._v(" "+e._s(t.compensation)+" บาท/ชม ")]),o("c-flex",{attrs:{jusify:"center"}},[o("c-button",{attrs:{mt:"2rem",m:"3",bgColor:"black",color:"white",size:"lg",_hover:{bg:"pink.400"}}},[o("a",e._b({attrs:{href:"#/JobInfoApply"},on:{click:function(o){return e.value(t.id)}}},"a",t,!1),[e._v("รายละเอียดงาน")])]),"IN PROGRESS"!==t.working_status&&"FINISH"!==t.working_status?o("div"):e._e()],1)],1)],1)],1)})),0)],1)])],1)},r=[],i=o("b529"),l=o("73ec"),n=o("bc3a"),g=o.n(n),d=o("e100"),b={components:{},data(){return{form:{provinces:"",category:"",compensation:"",working_status:""},jobs:[],count_job:0,payload_url:"",job_id:0,user:[],user_id:0,provinces:[],categories:[],isLoading:!0}},async created(){console.log("fetch================="),this.fetchUser(),await this.fetchJobs(),this.getProvince(),this.getCategories(),this.isLoading=!1},methods:{async search(e){let t={user_id:this.user_id,working_status:e};await i["a"].dispatch("fetchJobUserApply",t),this.jobs=i["a"].getters.getJobsThatUserApply,console.log("fetch=================",this.jobs)},async getProvince(){let e=await g.a.get("https://thaiaddressapi-thaikub.herokuapp.com/v1/thailand/provinces");this.provinces=e.data},async getCategories(){await d["a"].dispatch("fetchData"),this.categories=d["a"].getters.getCategories},fetchUser(){this.user=l["a"].getters.user,this.user_id=this.user.id,console.log("this.user==>",this.user)},async fetchJobs(){let e={user_id:this.user_id,working_status:"ALL"};await i["a"].dispatch("fetchJobUserApply",e),this.jobs=i["a"].getters.getJobsThatUserApply,console.log("fetch=================",this.jobs),this.form.working_status=""},async value(e){await i["a"].dispatch("fetchJobById",e)},async Freelance(e){await i["a"].dispatch("fetchJobById",e)}},colors:{purple:"#9356F7"}},m=b,h=(o("a236"),o("2877")),u=Object(h["a"])(m,c,r,!1,null,null,null),p=u.exports;const y=o("eb99");y(u,{CSelect:o("89e8").CSelect,CButton:o("89e8").CButton,CFlex:o("89e8").CFlex,CText:o("89e8").CText,CImage:o("89e8").CImage,CBadge:o("89e8").CBadge,CBox:o("89e8").CBox,CSimpleGrid:o("89e8").CSimpleGrid});var f={components:{Job:p},data(){return{job:[]}},async created(){},methods:{}},_=f,w=Object(h["a"])(_,a,s,!1,null,null,null);t["default"]=w.exports},a236:function(e,t,o){"use strict";o("d017")},b529:function(e,t,o){"use strict";var a=o("2b0e"),s=o("2f62"),c=o("3ff5"),r=o("ac20");a["default"].use(s["a"]),t["a"]=new s["a"].Store({state:{posts:[],data:[],JobById:[],allJobs:[],JobSuggest:[],fetchRemark:[],fetchUserFinish:[],jobByUser:[],jobFromSearch:[],JobAvaNotLogIn:[],AllJobsAvaNotLogIn:[],JobsThatUserApply:[],recentlyPostedJob:[]},getters:{posts:e=>e.posts,jobs:e=>e.data,job_filtered:e=>e.JobById,getAllJobs:e=>e.allJobs,getJobSuggest:e=>e.JobSuggest,getUserFinish:e=>e.fetchUserFinish,getJobByUser:e=>e.jobByUser,getJobById:e=>e.JobById,getJobFromSearch:e=>e.jobFromSearch,getAvaJobNotLogIn:e=>e.JobAvaNotLogIn,getAllJobsAvaNotLogIn:e=>e.AllJobsAvaNotLogIn,getJobsThatUserApply:e=>e.JobsThatUserApply,getRecentlyPostedJob:e=>e.recentlyPostedJob},mutations:{async fetch(e,{res:t}){e.data=(await t).data},async fetchById(e,{res:t}){e.JobById=(await t).data},async fetchJobUserApply(e,{res:t}){e.JobsThatUserApply=(await t).data},async fetchSuggest(e,{res:t}){e.JobSuggest=(await t).data},async fetchAllAvaJobNotLogIn(e,{res:t}){e.AllJobsAvaNotLogIn=(await t).data},async fetchByUser(e,{res:t}){e.jobByUser=await t},async fetchAvaJobNotLogIn(e,{res:t}){e.JobAvaNotLogIn=await t.data},async fetchFromSearch(e,{res:t}){e.jobFromSearch=(await t).data},addPost(e,t){e.posts.unshift(t)},setAllJobs(e,t){e.allJobs=t},addRemark(e,t){e.fetchRemark=t},fetchUserFinishJob(e,t){e.fetchUserFinish=t},setJobById(e,t){e.JobById=t},removeJob(e,t){e.allJobs=e.allJobs.map(e=>e.id!=t.id)},setRecentlyPostedJob(e,t){e.recentlyPostedJob=t}},actions:{async fetchJobSuggest({commit:e},t){console.log("fetchJobSuggest"),console.log("---id---",t);let o={id:t},a=await r["c"].post(`/api/jobs/${t}/get-rand-jobs`,o);console.log("JobSuggest",(await a).data),console.log("fetchJobSuggest"),e("fetchSuggest",{res:a})},async fetchData({commit:e}){let t=c["a"].getApiHeader(),o=await r["c"].get("/api/jobs",t);e("fetch",o)},async postJob({commit:e},t){try{let o=await r["c"].post("/api/jobs",t);if(201===o.status)return e("setRecentlyPostedJob",o.data),{success:!0}}catch(o){return{success:!1,message:"ตรวจสอบฟอร์มกรอกข้อมูลอีกครั้ง"}}},async fetchJob({commit:e}){try{let t=r["c"].get("/api/jobs");if(console.log("res = ",(await t).data),200===(await t).status)return console.log((await t).data),console.log("ดำะแ้ ่นิ"),e("fetch",{res:t}),{success:!0}}catch(t){return{success:!1}}},async report({commit:e},t){console.log(t);let o={id:t.id};console.log(o.id);await r["c"].get(`/api/jobs/${t.id}/report-inappropriate`)},async paginate({commit:e},t){console.log(t);let o={id:t.id};console.log(o.id);let a=await r["c"].post(t.url,o);console.log("route"),console.log("data from url"),console.log(await a),e("fetch",{res:a})},async paginate_post({commit:e},t){let o=r["c"].post(t);console.log("route"),console.log(t),console.log("data from url"),console.log((await o).data),e("fetch",{res:o})},async getJobByID({commit:e},t){let o=await r["c"].get("/api/jobs/"+t),a=o.data;return a},async fetchJobById({commit:e},t){console.log("---id---"),console.log(t);try{let o=await r["c"].get("/api/jobs/"+t);e("fetchById",{res:o}),console.log((await o).data)}catch(o){console.log(o.message)}console.log("fetchById")},async fetchJobFromSearch({commit:e},t){let o={title:t.title,province:t.province,category:t.category,compen:t.compensatsion_array,check:t.check,user_id:t.user_id};console.log("body",t);try{let t=await r["c"].post("/api/get-job-from-search",o);e("fetchFromSearch",{res:t}),console.log("s",t)}catch(a){console.log(a.message)}console.log("fetchJobFromSearch")},async fetchJobUserId({commit:e},t){console.log("---id---");let o={id:t.user_id,working_status:t.working_status};console.log(o);let a=await r["c"].post("/api/get-job-by-user-id",o);console.log((await a).data),console.log("fetchByUser"),e("fetchByUser",{res:a}),console.log("fetchByUser")},async fetchJobUserApply({commit:e},t){console.log("---id---");let o={id:t.user_id,working_status:t.working_status};console.log(o);let a=await r["c"].post("/api/get-job-apply",o);console.log((await a).data),console.log("fetchJobUserApply"),e("fetchJobUserApply",{res:a}),console.log("fetchJobUserApply")},async fetchJobAvaliableNotLogedIn({commit:e},t){console.log("fetchJobAvaliableNotLogedIn"),console.log("id",t);let o={id:t},a=await r["c"].post("api/jobs/get-avaliable-jobs-not-log-in",o);console.log(a),e("fetchAvaJobNotLogIn",{res:a})},async addRemarks({commit:e},t){try{console.log("payload.id---",t.id),console.log("payload.remark---",t.remark);let o={id:t.user_id,remark:t.remark};console.log("body.id---",o.id),console.log("body.remark---",o.remark);let a=await r["c"].post(`/api/jobs/${t.job_id}/apply-job`,o);return console.log("res",a),e("addRemark",{res:a}),{success:!0}}catch(o){return{success:!1,message:o.response.data}}},async fetchAllJobs({commit:e}){try{let t=await r["c"].get("/api/get-all-jobs");console.log("line 82",t.data),e("setAllJobs",t.data)}catch(t){console.log(t)}},async fetchUserFinish({commit:e},t){let o=await r["c"].get(`/api/jobs/${t}/finish-job`);console.log("finish job =>",o),e("fetchUserFinishJob",o)},async fetchJobByID({commit:e},t){try{let o=await r["c"].get("/api/jobs/"+t);e("setJobById",o.data)}catch(o){console.log(o.message)}},async removeJob({commit:e},{headers:t,id:o}){try{let t=await r["c"].delete("/api/jobs/"+o);e("removeJob",t.data)}catch(a){console.log(a.message)}},async employerSelectFreelancer({commit:e},t){try{let e={id:t.user_id};return await r["c"].put(`/api/jobs/${t.job_id}/select-freelancer`,e),{success:!0}}catch(o){return{success:!1,message:o.response.data}}}}})},d017:function(e,t,o){},e100:function(e,t,o){"use strict";var a=o("2b0e"),s=o("2f62"),c=o("ac20");a["default"].use(s["a"]),t["a"]=new s["a"].Store({state:{categories:[],categories_after_remove:[],category:{}},getters:{getCategories:e=>e.categories,getCategory:e=>e.category},mutations:{setCategories(e,t){e.categories=t},removeCategory(e,t){e.categories_after_remove=e.categories_after_remove.map(e=>e.id!=t.id)},setCategory(e,t){e.category=t}},actions:{async fetchData({commit:e}){let t=await c["c"].get("/api/categories");e("setCategories",t.data)},async removeCategory({commit:e},t){let o=await c["c"].delete("api/categories/"+t);e("removeCategory",o.data)},async fetchCategoryById({commit:e},t){let o=await c["c"].get("/api/categories/"+t);e("setCategory",o.data)},async editCategory({commit:e},t){await c["c"].put("/api/categories/"+t.id,t)},async addCategory({commit:e},t){await c["c"].post("/api/categories/",t)}},modules:{}})}}]);
//# sourceMappingURL=chunk-17cd544e.72c7ed41.js.map